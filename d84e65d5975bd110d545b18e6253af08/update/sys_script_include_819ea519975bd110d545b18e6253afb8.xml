<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_376096_papro.PortalApprovalUtilClient</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>PortalApprovalUtilClient</name>
        <script><![CDATA[/*
Copyright (c) 2022 Markus Kraus

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
/* global global, gs */
/* global Class, GlideRecordSecure, GlideStringUtil */
/* eslint no-undef: "error" */
var PortalApprovalUtilClient = Class.create();
PortalApprovalUtilClient.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	initialize: function () {
		global.AbstractAjaxProcessor.prototype.initialize.apply(this, arguments);
	},
	
	getConfig: function () {
		var result = {
			reject_comment_mandatory: gs.getProperty('x_376096_papro.comment.mandatory.reject') == 'true',
			approve_comment_mandatory: gs.getProperty('x_376096_papro.comment.mandatory.approve') == 'true',
			always_confirm: gs.getProperty('x_376096_papro.comment.show_always') == 'true'
		};
		
		return JSON.stringify(result);
	},
	
	setApprovalState: function () {
		var result = {
			status: 'error',
			message: ''
		};
		
		var sysId = this.getParameter('sys_id');
		var comment = this.getParameter('comment');
		var state = this.getParameter('state');
		if (GlideStringUtil.isEligibleSysID(sysId) && (state == 'approved' || state == 'rejected')) {				
			var approvalGr = new GlideRecordSecure('sysapproval_approver');
			approvalGr.addQuery('sys_id', sysId);
			approvalGr.setLimit(1);
			approvalGr.query();
			if (approvalGr.next()) {
				if (approvalGr.state == 'requested') {
					var commentMandatoryOnApprove = gs.getProperty('x_376096_papro.comment.mandatory.approve') == 'true';
					var commentMandatoryOnReject = gs.getProperty('x_376096_papro.comment.mandatory.reject') == 'true';
					if (state == 'approved' && !comment && commentMandatoryOnApprove) {
						result.message = gs.getMessage('x_376096_papro_approve_comment_mandatory');
					} else if (state == 'rejected' && !comment && commentMandatoryOnReject) {
						result.message = gs.getMessage('x_376096_papro_reject_comment_mandatory');
					} else {
						approvalGr.state = state;
						approvalGr.comments = comment;

						// if a business rule / data policy aborts the action, .update() will return null
						var success = approvalGr.update() != null;
						if (success) {
							result.status = 'success';
						} else {
							result.message = gs.getMessage('x_376096_papro_invalid_update');
						}
					}
				} else {
					result.message = gs.getMessage('x_376096_papro_not_requested');
				}
			} else {
				result.message = gs.getMessage('x_376096_papro_record_unauthorized_or_invalid_record');
			}
		} else {
			result.message = gs.getMessage('x_376096_papro_invalid_parameters');
		}
		
		return JSON.stringify(result);
	},

    type: 'PortalApprovalUtilClient'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-11-20 10:35:26</sys_created_on>
        <sys_id>819ea519975bd110d545b18e6253afb8</sys_id>
        <sys_name>PortalApprovalUtilClient</sys_name>
        <sys_package display_value="Portal Approval" source="x_376096_papro">d84e65d5975bd110d545b18e6253af08</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Portal Approval">d84e65d5975bd110d545b18e6253af08</sys_scope>
        <sys_update_name>sys_script_include_819ea519975bd110d545b18e6253afb8</sys_update_name>
    </sys_script_include>
</record_update>
